ABSTACCIÓN

Es el segundo principio de la POO y hace referencia a reducir complejidad ocultando detalles e implementaciones innecesarias. Cuando queremos cambiar un canal de la TV no necesitamos saber el funcionamiento interno de un control remoto, como el mismo se comunica con la TV y luego la acción de la TV para realizar esto, solo queremos apretar un botón y que se ejecute la acción. Lo mismo podemos hacer en nuestro código. Mediante la abstacción queremos que una clase por ejemplo, sea como una caja negra sin importarnos que haya adentro, solo queremos que reciba una indicación y de una respuesta, con una interfaz facil de utilizar y reutilizar. Volviendo al ejemplo de la clase CuentaBancaria, queremos simplemente darle un nombre, el DNI del titular y una contraseña, y que nos devuelva el saldo, y nos deje extraer y depositar dinero; no nos interesa si internamente tendrá que calcular un tax, verificar si hay saldo antes de retirarlo, o cómo es el funcionamiento cuando se deposita dinero, cómo se cuenta el mismo, como verifica que la clave y el usuario sean correctos, etc.