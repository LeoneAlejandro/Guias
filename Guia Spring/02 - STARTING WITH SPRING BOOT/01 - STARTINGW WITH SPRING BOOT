02 - STARTINGW WITH SPRING BOOT
───────────────────────────────┘

El objetivo más importante de Spring Boot es ayudar a construir production-ready projects o apps de manera rápida.
Para crear proyectos rápidos tenemos las siguientes herramientas:

	1) Spring initializer: ayuda a crear proyectos en blanco de manera rápida definiendo dependencias (start.spring.io).
	2) Spring Boot Starter Projects: nos ayuda a definir rápidamente dependencias para nuestro proyecto.
	3) Spring Boot Auto Configuration: provee automáticamente configuración basada en las dependencias definidas en el class path.
	4) Spring Boot Dev Tool: ayuda a realizar cambios en nuestra app sin la necesidad de manualmente resetear el servidor.

Los features importantes para que un proyecto sea production-ready son:

	- Logging
	- Configs diferentes para diferentes envirorments (production, staging, testing). Spring provee Profiles y ConfigurationProperties
	- Monitoreo (Spring Boot Actuator)



2) Spring Boot Starter Projects:
────────────────────────────────┘

Cuando creamos nuestro proyecto necesitamos una gran variedad de frameworks. Por ejemplo para construir

	- REST APIs: Necesito Spring, Spring MVC, Tomcat, JSON conversion, etc
	- Escribir Unit Test: Necesito Spring Test, JUnit, Mockito, etc

La pregunta es, como los agrupamos de forma facil para construir aplicaciones ? Esto es lo que nos provee Starter Projects, nos provee convenientes dependency descriptors para diferentes features. Si abrimos el POM.xml de un proyecto básico iniciado en spring initializr con Starter Web veremos que tenemos 2 dependencias principales, una de las cuales es Spring Boot Starter Web, y si le hacemos control click nos mostrará todas las dependencias que están agrupadas dentro de la dependencia prrincipal. Las dependencias inherentes de SBSW son:

	- Spring Boot Starter: nos ayuda a levantar el Spring context
	- Spring Boot Starter Json: nos ayuda con la conversion de bin a JSON y JSON a bin
	- Spring Boot Starter Tomcat: hace que la app corra en TOMCAT
	- Spring WEB y WEBMVC: Spring MVC framework para nuestra crear nuestra REST API 


3) Spring Boot Auto Configuration:
──────────────────────────────────┘

Para queremos constuir una app web con Spring Boot necesitamos muchas configuraciones como ComopnentScan, DispatcherServlet, DataSources, JSON Conversion, etc.
Spring Boot Auto Configuration logra auto configurar todo esto por nosotros decidiendo en base a que frameworks existen en nuestro Class Path y cual es la configuración inicial o existente (annotaciones, etc).
Toda la lógica de autoconfiguración se encuentra en "Project/Maven Dependencies/spring-boot-autoconfigure-ver.jar".


4) Spring Boot Dev Tools:
─────────────────────────┘

Ayuda a incrementar la productividad de los developers. Para ayudar a aumentar la productividad Dev Tools nos provee la simpleza de no tener que resetear manualmente el servidor al hacer cambios en nuestro código. Una vez que guardamos algun cambio en nuestro proyecto veremos que el servidor se resetea automáticamente.